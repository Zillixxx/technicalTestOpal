version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: testOpal_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testOpal
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - testOpal_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: testOpal_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@db:5432/testOpal
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - testOpal_network
    # Attendre la DB, appliquer les migrations Prisma, puis d√©marrer le backend
    command: ["./wait-for-db.sh", "db", "5432", "30", "sh", "-c", "npx prisma migrate deploy && npm start"]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: testOpal_frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - testOpal_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  testOpal_network:
    driver: bridge
